#!/bin/bash
#NAMESPACE=route_ajax

dependencies::depends "http/http"
dependencies::depends "http/webauth"
dependencies::depends "queue/client"
dependencies::depends "player/playlister"

function headers() {
    http::set_header "Content-Type" "text/html"
}

function redirect_home() {
    http::set_header "Refresh" "0;url=/"
}

function timer() {
    echo `cat /volatile/ffout | tr "\r" "\n" | tail -n 1 | cut -d= -f3 | cut -d\  -f1` / `cat $SHARED_STORAGE/current_meta | cut -d\: -f2- | cut -d, -f1 | sed -e 's/[hms]//g'`
}

function current_id() {
    cat $SHARED_STORAGE/current_id 
}

function previous_id() {
    cat $SHARED_STORAGE/previous_id 
}

function next_id() {
    playlister::peek
}

function title(id) {
    cat $SHARED_STORAGE/cache/$id.info.json | jq .title | tr -d '"'
}

function messages(count order) {
    echo "["
    this::rawmessages "$count" "$order" | sed 's/$/,/g'
    echo '{"uid":"", "date":"", "message":""}]'
}

function rawmessages(count order) {
    if [[ $count -gt 20 ]]; then count=20; fi
    if [[ $order != "-1" ]]; then order=0; fi

    redis-cli -h redis --raw LRANGE messages 0 25
}

function setmessage(uid message) {
    local msg=`echo $message  | sed 's/[^a-zA-Z0-9.,:;!?@~#$%^&*()+ -]//g' | cut -c 1-160`
    if [[ $msg == "" ]]
    then 
	return 0
    fi
    date=`date -u`
    redis-cli -h redis --raw LPUSH messages "{\"uid\":\"$uid\", \"date\":\"$date\", \"message\":\"$msg\"}"
}

function thumbnail(id) {
    if [[ -f $SHARED_STORAGE/cache/$id.jpg ]]
    then
        http::set_header "Cache-Control" "public, max-age=1440000"
	    http::serve_file $SHARED_STORAGE/cache/$id.jpg
    else
	if [[ -f $SHARED_STORAGE/cache/$id.webp ]]
	then
		convert $SHARED_STORAGE/cache/$id.webp $SHARED_STORAGE/cache/$id.jpg
        http::set_header "Cache-Control" "public, max-age=1440000"
		http::serve_file $SHARED_STORAGE/cache/$id.jpg
	else
		http::serve_file $DIR/data/broken.jpg
	fi
    fi
}