#!/bin/bash

export start_time=$(date +%s.%3N)

DIR=`dirname "${BASH_SOURCE[0]}"`
if [[ -f $DIR/bootstrap.sh ]]
then
    . $DIR/bootstrap.sh
else
    echo "bootstrap not found"
    exit 256
fi

trap "kill -9 $$" SIGINT

while [[ `ps ax | grep -c servelet` -gt MAX_CONCURRENCY ]]; do
sleep 0.1;
done;

bootstrap_load_module http/server
logger::log "debug" "bootstrap: http/server $(echo "scale=3; $(date +%s.%3N) - $start_time" | bc)"
bootstrap_load_module http/http
logger::log "debug" "bootstrap: http/http $(echo "scale=3; $(date +%s.%3N) - $start_time" | bc)"
bootstrap_load_module http/webauth
logger::log "debug" "bootstrap: http/webauth $(echo "scale=3; $(date +%s.%3N) - $start_time" | bc)"
bootstrap_load_module routes/routes
logger::log "debug" "bootstrap: http/routes $(echo "scale=3; $(date +%s.%3N) - $start_time" | bc)"

httpd::servelet_start
logger::log "debug" "worker done $(echo "scale=3; $(date +%s.%3N) - $start_time" | bc)"
# redirect away from cgi-bin
if [[ "$REQUEST_URI" =~ /cgi-bin(.*) ]]
then
    http::set_header "Content-Type" "text/html; charset=UTF-8"
    http::set_header "X-Powered-By" "YEAHBASH"
    http::set_header "Location" "/$BASE_DIR"
    http::set_header "Status" "301 Looky here"
    http::output_start
    echo ""
    http::clean_files
    httpd::end
fi

# run.
webauth::init

route=`http::get_param route`
routes::headers "$route"
logger::log "debug" "route done $(echo "scale=3; $(date +%s.%3N) - $start_time" | bc)"
http::set_header "Content-Type" "text/html; charset=UTF-8"
http::set_header "X-Powered-By" "YEAHBASH"
out=`routes::show "$route"`
logger::log "debug" "output collected $(echo "scale=3; $(date +%s.%3N) - $start_time" | bc)"
http::output_start
echo "$out"
http::clean_files
logger::log "debug" "bye bye $(echo "scale=3; $(date +%s.%3N) - $start_time" | bc)"
httpd::end